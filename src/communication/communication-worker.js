(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const n=new Uint8Array(16);function i(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(n)}const s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));const o=function(t,n,o){if(e.randomUUID&&!n&&!t)return e.randomUUID();const a=(t=t||{}).random||(t.rng||i)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,n){o=o||0;for(let e=0;e<16;++e)n[o+e]=a[e];return n}return function(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}(a)};var a,r,d,c,l,u,h;!function(e){e[e.DocOp=0]="DocOp",e[e.DocResourceUpload=1]="DocResourceUpload",e[e.DocCommentOp=2]="DocCommentOp",e[e.DocUpload=3]="DocUpload",e[e.DocSelectionOp=4]="DocSelectionOp",e[e.NetworkStatus=255]="NetworkStatus"}(a||(a={})),a.DocOp,a.DocResourceUpload,a.DocCommentOp,a.DocUpload,a.DocSelectionOp,a.NetworkStatus,function(e){e[e.Online=0]="Online",e[e.Offline=1]="Offline"}(r||(r={})),function(e){e[e.Return=0]="Return",e[e.OpenTunnel=1]="OpenTunnel",e[e.CloseTunnel=2]="CloseTunnel",e[e.TunnelData=3]="TunnelData",e[e.Heartbeat=255]="Heartbeat",e[e.HeartbeatResponse=254]="HeartbeatResponse"}(d||(d={})),function(e){e[e.InitResult=0]="InitResult",e[e.CmdReturn=1]="CmdReturn",e[e.CloseTunnel=2]="CloseTunnel",e[e.TunnelData=3]="TunnelData",e[e.Heartbeat=255]="Heartbeat",e[e.HeartbeatResponse=254]="HeartbeatResponse"}(c||(c={})),function(e){e.Success="success",e.Fail="fail"}(l||(l={})),function(e){e[e.Text=1]="Text",e[e.Binary=2]="Binary"}(u||(u={})),function(e){e.TunnelIdError="tunnel_id错误"}(h||(h={}));class m{port;server;info;onclose;tunnelId="";tunnelType;pendingCmdList=new Map;sendToServerHandler;receivingData=void 0;isClosed=!1;constructor(e,t,n,i){this.port=e,this.server=t,this.info=n,this.tunnelType=n.tunnelType,this.onclose=i}async start(){const e=await this.sendToServer(d.OpenTunnel,{data:this.info.data},!0),t=await this.getCmdResult(e);return!(!t||"string"!=typeof t.data.tunnel_id||""===t.data.tunnel_id||(this.tunnelId=t.data.tunnel_id,0))}async receiveFromClient(e){const t=e.data;if(console.log("receiveFromClient",this.tunnelId,t),t.close)return void this.close(!0,!1);const n=t instanceof ArrayBuffer;if(n&&void 0===this.receivingData)return void console.log("数据传输错误：缺少数据头");if(n||void 0===this.receivingData||(console.log("数据传输错误：缺少数据段"),this.receivingData=void 0),n)return await this.server.send(t),void(this.receivingData=void 0);t.dataType===u.Binary&&(this.receivingData=t);const i=await this.sendToServer(d.TunnelData,t,t.isListened,t.cmdId);if(t.isListened){if(!t.cmdId)return void console.log("数据传输错误：data.isListened=true时cmdId不能为空");const e=await this.getCmdResult(i);if(!e)return;this.sendToClient({cmdId:t.cmdId,isListened:!0,data:e})}}sendToClient(e){if(e.isListened&&!e.cmdId)return void console.log("数据传输错误：data.isListened=false时cmdId不能为空");const t=e.data,n=t instanceof ArrayBuffer;n&&(e.data=void 0),e.dataType=n?u.Binary:u.Text,this.port.postMessage(e),n&&this.port.postMessage(t,[t])}receiveFromServer(e){switch(e.cmd_type){case c.CmdReturn:{if(e.status===l.Fail&&e.message===h.TunnelIdError)return void this.close(!1,!0);const t=e.data?.cmd_id;if("string"!=typeof t||""===t)return;if(!this.pendingCmdList.has(t))return;this.pendingCmdList.get(t).resolve({status:e.status??l.Fail,message:e.message,data:e.data});break}case c.CloseTunnel:this.close();break;case c.TunnelData:{const t=e.data?.data_type;if(t!==u.Text&&t!==u.Binary){console.log("不支持的数据类型",t);break}if(t===u.Binary&&!(e.data.data instanceof ArrayBuffer)){console.log("数据类型错误：非二进制数据");break}this.sendToClient({data:e.data.data});break}default:console.log("不支持的cmd_type",e.cmd_type)}}async sendToServer(e,t,n=!1,i){"string"==typeof i&&""!==i||(i=o());const s={cmd_id:t?.cmdId,tunnel_id:this.tunnelId?this.tunnelId:void 0,data_type:t?.dataType,data:t?.data},a={cmd_type:e,cmd_id:i,tunnel_type:this.tunnelType,data:s};if(n){let e=()=>{};const t=new Promise((t=>e=t));this.pendingCmdList.set(i,{cmd:a,promise:t,resolve:e}),this.sendToServerHandler?.(i,a)}return await this.server.send(JSON.stringify(a)),i}async getCmdResult(e){if(!this.pendingCmdList.has(e))return;const t=this.pendingCmdList.get(e),n=await t.promise;return this.pendingCmdList.delete(e),n}setSendToServerHandler(e){this.sendToServerHandler=e}close(e=!1,t=!0){this.isClosed||(e&&this.sendToServer(d.CloseTunnel,{tunnel_id:this.tunnelId}),t&&this.sendToClient({close:!0,data:void 0}),this.port.close(),this.onclose(),this.isClosed=!0)}}function v(e){return new Promise((t=>setTimeout(t,e)))}class f{token;ws=void 0;receivingTunnel=void 0;receivingTunnelCmd=void 0;tunnelMap;cmdIdToTunnel;isConnected=!1;isConnecting=!1;connectPromise=void 0;isClosed=!1;onNetworkOnline=()=>{};onNetworkOffline=()=>{};isFirstConnect=!0;id="";lastReceiveHeartbeatTime=0;lastSendHeartbeatTime=0;sendHeartbeatInterval;receiveHeartbeatInterval;networkStatus=r.Offline;onConnected=()=>{};constructor(e,t,n){this.token=e,this.tunnelMap=t,this.cmdIdToTunnel=n}async connect(){if(this.isClosed)return!1;if(this.isConnected)return!0;if(this.isConnecting&&this.connectPromise)return await this.connectPromise;this.isConnecting=!0;let e=()=>{};this.connectPromise=new Promise((t=>e=t));try{this.ws=new WebSocket("wss://protodesign.cn/api/v1/communication"),this.ws.binaryType="arraybuffer"}catch(t){return console.log(t),this.ws=void 0,e(!1),this.isConnecting=!1,!1}try{await new Promise(((e,t)=>{this.ws.onopen=t=>e(),this.ws.onerror=e=>t(e)}))}catch(t){return console.log(t),this.ws=void 0,e(!1),this.isConnecting=!1,!1}return this.ws.send(JSON.stringify({token:this.token})),await new Promise((e=>{this.ws.onmessage=t=>{try{const n=JSON.parse(t.data);if(n.cmd_type!==c.InitResult||"string"!=typeof n.cmd_id||""===n.cmd_id||n.status!==l.Success||!n.data?.communication_id)return void e(!1);this.id=n.data.communication_id,e(!0)}catch(t){console.log(t),e(!1)}}}))?(this.ws.onmessage=this.onMessage.bind(this),e(!0),this.isConnecting=!1,this.isConnected=!0,this.ws.onclose=e=>{this.isConnected=!1,this.isClosed||this.networkStatus===r.Offline||(this.networkStatus=r.Offline,this.onNetworkOffline())},this.isFirstConnect?(this.isFirstConnect=!1,this.networkStatus=r.Online,this.sendHeartbeatInterval=setInterval((()=>{this.sendHeartbeat()}),1e3),this.receiveHeartbeatInterval=setTimeout((()=>{this.isClosed||this.networkStatus===r.Offline||(this.networkStatus=r.Offline,this.onNetworkOffline())}),3e3)):this._onNetworkOnline(),this.onConnected(),!0):(this.ws=void 0,e(!1),this.isConnecting=!1,!1)}async send(e){if(this.isClosed)return!1;if(!this.isConnected)for(;!await this.connect();){if(this.isClosed)return!1;await v(1e3)}return this.ws.send(e),!0}onMessage(e){const t=e.data instanceof ArrayBuffer,n=t?e.data:JSON.parse(e.data);if(t&&(void 0===this.receivingTunnel||void 0===this.receivingTunnelCmd))return void console.log("数据传输错误：缺少数据头");if(t||void 0===this.receivingTunnel&&void 0===this.receivingTunnelCmd||(console.log("数据传输错误：缺少数据段"),this.receivingTunnel=void 0,this.receivingTunnelCmd=void 0),t)return this.receivingTunnelCmd.data.data=n,this.receivingTunnel.receiveFromServer(this.receivingTunnelCmd),this.receivingTunnel=void 0,void(this.receivingTunnelCmd=void 0);const i=n.cmd_id;if("string"!=typeof i||""===i)return void console.log("cmd_id参数错误",i);if(n.cmd_type===c.Heartbeat||n.cmd_type===c.HeartbeatResponse)return void this.receiveHeartbeat(n);const s=n.data?.tunnel_id,a=n.cmd_type===c.TunnelData;let r=this.tunnelMap.get(s);if(!a||r){if(a&&n.data?.data_type===u.Binary)return this.receivingTunnel=r,void(this.receivingTunnelCmd=n);if(!r){const e=n.data?.cmd_id;r=this.cmdIdToTunnel.get(e),this.cmdIdToTunnel.delete(e)}r?.receiveFromServer(n),console.log("receiveFromServer",n)}else this.send(JSON.stringify({cmd_type:d.Return,cmd_id:o(),status:l.Fail,message:h.TunnelIdError,data:{cmd_id:i,tunnel_id:s}}))}sendHeartbeat(){this.lastSendHeartbeatTime=Date.now(),this.send(JSON.stringify({cmd_type:d.Heartbeat,cmd_id:o(),data:{time:Date.now()}}))}_onNetworkOnline(){void 0!==this.receiveHeartbeatInterval&&clearTimeout(this.receiveHeartbeatInterval),this.receiveHeartbeatInterval=setTimeout((()=>{this.isClosed||this.networkStatus===r.Offline||(this.networkStatus=r.Offline,this.onNetworkOffline())}),3e3),this.networkStatus===r.Offline&&(this.networkStatus=r.Online,this.onNetworkOnline()),this.lastReceiveHeartbeatTime=Date.now()}receiveHeartbeat(e){this._onNetworkOnline(),e.cmd_type===c.Heartbeat&&this.send(JSON.stringify({cmd_type:d.HeartbeatResponse,cmd_id:o(),data:{time:Date.now(),cmd_id:e.cmd_id}}))}async close(){void 0!==this.ws?(this.ws?.close(),this.ws=void 0,this.isConnected=!1,this.isConnecting=!1):this.isConnecting&&void 0!==this.connectPromise&&(await this.connectPromise,await this.close()),void 0!==this.sendHeartbeatInterval&&(clearInterval(this.sendHeartbeatInterval),this.sendHeartbeatInterval=void 0),void 0!==this.receiveHeartbeatInterval&&(clearTimeout(this.receiveHeartbeatInterval),this.receiveHeartbeatInterval=void 0),this.isClosed=!0}}const p=self;let g;const T=new Map,w=new Map;let y="";const C=new Map;function I(e){for(const t of C.values())t.receiveFromServer({cmd_type:c.TunnelData,cmd_id:o(),data:{data_type:u.Text,data:e}})}p.onconnect=e=>{const t=e.ports[0];t.onmessage=async e=>{const n=e.data;""!==y&&n.token!==y&&void 0!==g&&(g.close(),g=void 0);const i={name:n.name,id:""};if(!n.name)return console.log("name参数错误",n.name),void t.postMessage(i);void 0===g&&(y=n.token,g=new f(y,T,w),g.onConnected=()=>{for(const e of T.values())e.close();T.clear(),C.clear()},g.onNetworkOnline=()=>{I(r.Online)},g.onNetworkOffline=()=>{I(r.Offline)},g.connect()),n.id=o();const s=new m(t,g,n,(()=>{T.delete(s.tunnelId),C.delete(s.tunnelId)}));n.tunnelType===a.NetworkStatus&&(s.tunnelId=o(),C.set(s.tunnelId,s)),s.setSendToServerHandler(((e,t)=>w.set(e,s))),(n.tunnelType===a.NetworkStatus||await s.start())&&(console.log("tunnel创建成功",s.tunnelId),i.id=s.tunnelId,T.set(s.tunnelId,s),t.onmessage=s.receiveFromClient.bind(s)),t.postMessage(i)}}})();
